from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message

from filter.admin_filter import check_super_admin, check_admin
from module.data_base import create_table_users, add_admin, add_user
from keyboards.keyboard_main import keyboards_super_admin, keyboards_partner, keyboards_user

import logging

router = Router()
# create_table_users()


@router.message(CommandStart(), lambda message: check_super_admin(message.chat.id))
async def s(message: Message) -> None:
    logging.info("process_start_command")
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    :param message: 
    :return: 
    """
    create_table_users()
    add_admin(id_admin=message.chat.id, user_name=message.from_user.username)
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üëã\n"
                              f"–í—ã —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤, "
                              f"—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏.",
                         reply_markup=keyboards_super_admin())


@router.message(CommandStart(), lambda message: check_admin(message.chat.id))
async def process_start_command_admin(message: Message) -> None:
    logging.info("process_start_command")
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    :param message: 
    :return: 
    """
    create_table_users()
    add_admin(id_admin=message.chat.id, user_name=message.from_user.username)
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üëã\n"
                              f"–í—ã –ø–∞—Ä—Ç–Ω–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏.",
                         reply_markup=keyboards_partner())



